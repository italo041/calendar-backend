{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","errors","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlusOne","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18e53c2f.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if (method === 'GET') {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET') {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","export const types = {\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Logout event',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear Active Event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n\r\n}","import moment from \"moment\";\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate()\r\n        })\r\n    )\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n        \r\n        const {uid, name} = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n            console.log(body);\r\n            if (body.ok) {\r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch( eventAddNew(event))\r\n                console.log(event);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\n\r\nconst eventAddNew = (event) => ({\r\n    type:types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type:types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type : types.eventClearActiveEvent\r\n})\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                dispatch( eventUpdated(event) );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n        const {id} = getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                dispatch( eventDeleted() );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nconst eventDeleted = () => ({\r\n    type : types.eventDeleted\r\n})\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            const events = prepareEvents(body.events);\r\n\r\n            dispatch( eventLoaded( events ))\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n}) \r\n \r\n\r\nexport const eventLogout = () => ({ type: types.eventLogout })","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async ( dispatch ) => {\r\n        const resp = await fetchSinToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n        \r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (name, email, password ) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth/new', {name, email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n            \r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            const {email, password, name} = body.errors || {};\r\n\r\n            if (email) {\r\n                Swal.fire('Error', email.msg, 'error')\r\n            } else if (password) {\r\n                Swal.fire('Error', password.msg, 'error')\r\n            } else if (name) {\r\n                Swal.fire('Error', name.msg, 'error')\r\n            } else if (body.msg) {\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n  \r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n            \r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n\r\n        } else { \r\n            dispatch(checkingFinish())\r\n        }\r\n    }\r\n}\r\n\r\nexport const checkingFinish = () => ({ type: types.authCheckingFinish })\r\n\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n}) \r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch( eventLogout());\r\n        dispatch( logout() )\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: '',\r\n        lPassword: ''\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: '',\r\n        rEmail: '',\r\n        rPassword1: '',\r\n        rPassword2: ''\r\n    });\r\n    \r\n    const { rName,rEmail,rPassword1,rPassword2 } = formRegisterValues;\r\n\r\n    const {lEmail, lPassword} = formLoginValues\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword))\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (rPassword1 !== rPassword2) {\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales','error')\r\n        }\r\n\r\n        dispatch(startRegister(rName, rEmail, rPassword1))\r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row w-100\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value= {rName}\r\n                                onChange= {handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value= {rEmail}\r\n                                onChange= {handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value= {rPassword1}\r\n                                onChange= {handleRegisterInputChange} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value= {rPassword2}\r\n                                onChange= {handleRegisterInputChange} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth' \r\n\r\nexport const Navbar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() ); \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const { title, user } = event;\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong> \r\n            <span>- {user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n})","import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from \"moment\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { uiCloseModal } from \"../../actions/ui\";\r\nimport { eventStartAddNew, eventClearActiveEvent, eventStartUpdate } from \"../../actions/events\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours'); //\r\nconst nowPlusOne = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n  title: '',\r\n  notes: '',\r\n  start: now.toDate(),\r\n  end: nowPlusOne.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n  const {modalOpen} = useSelector(state => state.ui);\r\n  const { activeEvent } = useSelector(state => state.calendar);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [dateStart, setDateStart] = useState(now.toDate());\r\n  const [dateEnd, setDateEnd] = useState(nowPlusOne.toDate());\r\n  const [titleValid, setTitleValid] = useState(true);\r\n\r\n  const [formValues, setFormValues] = useState( initEvent );\r\n  \r\n  const { notes ,title, start , end } = formValues;\r\n\r\n  useEffect(() => {\r\n    if(activeEvent) {\r\n      setFormValues( activeEvent );\r\n    } else {\r\n      setFormValues( initEvent );\r\n    }\r\n  }, [activeEvent, setFormValues])\r\n\r\n  const handleInputChange = ({target}) => {\r\n    setFormValues({\r\n        ...formValues,\r\n        [target.name]: target.value\r\n    })\r\n  }\r\n\r\n  const closeModal = () => {\r\n       dispatch( uiCloseModal() );  \r\n       dispatch( eventClearActiveEvent() );\r\n       setFormValues( initEvent );\r\n  };\r\n\r\n  const handleStartDateChange = ( e ) => {\r\n    setDateStart(e);\r\n    setFormValues({\r\n        ...formValues,\r\n        start:e\r\n    })\r\n  }\r\n\r\n  const handleEndDateChange = (e) => {\r\n    setDateEnd(e);\r\n    setFormValues({\r\n        ...formValues,\r\n        end:e\r\n    })\r\n  }\r\n\r\n  const handleSubmitForm = (e) => {\r\n      e.preventDefault();\r\n      \r\n      const momentStart = moment( start );\r\n      const momentEnd = moment( end );\r\n\r\n      if( momentStart.isSameOrAfter( momentEnd ) ) { \r\n          return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio','error');\r\n      }\r\n\r\n      if( title.trim().length < 2 ){\r\n        return setTitleValid(false);\r\n      }\r\n      //TODO realizar grabacion\r\n\r\n      if( activeEvent ){\r\n\r\n        dispatch ( eventStartUpdate( formValues ) );\r\n\r\n      }else {\r\n\r\n        dispatch( eventStartAddNew( formValues ));\r\n\r\n      }\r\n\r\n      \r\n\r\n      setTitleValid(true);\r\n      closeModal();\r\n\r\n    } \r\n  \r\n  \r\n\r\n  return (\r\n    <Modal\r\n      isOpen={modalOpen}\r\n      // onAfterOpen={afterOpenModal}\r\n      onRequestClose={closeModal}\r\n      style={customStyles}\r\n      closeTimeoutMS={200}\r\n      className=\"modal\"\r\n      overlayClassName=\"modal-fondo\"\r\n    > \r\n      <h1>{(activeEvent) ? 'Editar Evento' : 'Nuevo evento '}</h1>\r\n      <hr />\r\n      <form \r\n        className=\"container\"\r\n        onSubmit={handleSubmitForm}\r\n      >\r\n        <div className=\"form-group\">\r\n            <label>Fecha y hora inicio</label>\r\n            <DateTimePicker\r\n                onChange={ handleStartDateChange }\r\n                value={ dateStart }\r\n                className=\"form-control\"\r\n            />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <label>Fecha y hora fin</label>\r\n            <DateTimePicker\r\n                onChange={ handleEndDateChange }\r\n                value={ dateEnd }\r\n                className=\"form-control\"\r\n                minDate={ dateStart }\r\n            />\r\n        </div>\r\n\r\n        <hr />\r\n        <div className=\"form-group\">\r\n          <label>Titulo y notas</label>\r\n          <input\r\n            type=\"text\"\r\n            className={`form-control ${!titleValid && 'is-invalid'}`}\r\n            placeholder=\"Título del evento\"\r\n            name=\"title\"\r\n            autoComplete=\"off\"\r\n            value={title}\r\n            onChange={handleInputChange}\r\n          />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            Una descripción corta\r\n          </small>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Notas\"\r\n            rows=\"5\"\r\n            name=\"notes\"\r\n            value={notes}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            Información adicional\r\n          </small>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\r\n          <i className=\"far fa-save\"></i>\r\n          <span> Guardar</span>\r\n        </button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n    \r\n    return (\r\n        <button  className=\"btn btn-primary fab\" onClick={handleClickNew}>\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n    \r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar Evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\n\r\nimport { Navbar } from \"../ui/Navbar\";\r\nimport { messages } from \"../../helpers/calendar-messages-es\";\r\nimport { CalendarEvent } from \"./CalendarEvent\";\r\nimport { CalendarModal } from \"./CalendarModal\";\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from \"../../actions/events\";\r\nimport { AddNewFab } from \"../ui/AddNewFab\";\r\nimport { DeleteEventFab } from \"../ui/DeleteEventFab\";\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n  \r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    const { events, activeEvent } = useSelector(state => state.calendar); \r\n    const { uid } = useSelector(state => state.auth); \r\n\r\n    useEffect(() => {\r\n      dispatch( eventStartLoading() );\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch( uiOpenModal() ); \r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch ( eventSetActive(e) ); \r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e );\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n         dispatch( eventClearActiveEvent() );\r\n    }\r\n    \r\n    \r\n    \r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => { \r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div className=\"calendar-screen\">\r\n      <Navbar />\r\n\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\" \r\n        messages={messages}\r\n        eventPropGetter={eventStyleGetter}\r\n        onDoubleClickEvent={onDoubleClick}\r\n        onSelectEvent={onSelectEvent}\r\n        onSelectSlot= {onSelectSlot}\r\n        selectable={true}\r\n        onView={onViewChange}\r\n        view={lastView}\r\n        components={{\r\n            event: CalendarEvent\r\n        }}\r\n      />\r\n\r\n      { activeEvent &&  <DeleteEventFab /> }\r\n        \r\n        <AddNewFab />\r\n\r\n      <CalendarModal/>\r\n\r\n      \r\n    </div>\r\n    \r\n  );\r\n};\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    console.log(isAuthenticated);\r\n   \r\n    return (\r\n        <Route { ...rest } \r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ? <Component { ...props } />\r\n                    : <Redirect to=\"/login\" />\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest } \r\n            component={ (props) => (\r\n                (isAuthenticated )\r\n                    ? <Redirect to=\"/\" />\r\n                    : <Component { ...props } />\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nexport const AppRouter = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const {checking, uid} = useSelector(state => state.auth) \r\n\r\n  useEffect(() => {\r\n    dispatch(startChecking());\r\n  }, [dispatch])\r\n\r\n  if (checking) {\r\n    return ( <h5>Espere</h5>)\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute \r\n            exact \r\n            path=\"/login\" \r\n            component={LoginScreen}\r\n            isAuthenticated={ !!uid } />\r\n          <PrivateRoute\r\n            exact \r\n            path=\"/\" \r\n            component={CalendarScreen}\r\n            isAuthenticated={ !!uid } /> \r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        \r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n             \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\n// {\r\n//     id: 'asdasok12312ko3k21',\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add( 2, 'hours' ).toDate(),\r\n//     notes:'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name:'Fernando'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n         \r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => ( e.id !== state.activeEvent.id )\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        \r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}"," import { combineReducers } from 'redux'\r\nimport { uiReducer } from './uiReducer'\r\nimport { calendarReducer } from './calendarReducer'\r\nimport { authReducer } from './authReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose ;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './router/AppRouter'\r\nimport { store } from './store/store'\r\n \r\n\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/> \r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render( \n    <CalendarApp /> ,\n  document.getElementById('root')\n);\n \n"],"sourceRoot":""}